plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Selenium & TestNG
    implementation 'org.seleniumhq.selenium:selenium-java:4.26.0'
    implementation 'org.testng:testng:7.11.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.5.18'

    // REST API testing
    implementation 'io.rest-assured:rest-assured:4.5.1'
    implementation 'io.rest-assured:json-schema-validator:4.5.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Allure
    testImplementation 'io.qameta.allure:allure-testng:2.24.0'
}

test {
    useTestNG()
    systemProperty 'allure.results.directory', 'build/allure-results'
}

task writeAllureEnvironment {
    doLast {
        def envFile = file("$buildDir/allure-results/environment.properties")
        def browser = System.getProperty('browser', 'chrome')
        def device = System.getProperty('device', 'desktop')

        envFile.text = """
        Browser=${browser}
        Device=${device}
        """.stripIndent().trim()
    }
}

// Allure report
task generateAllureReport(type: Exec) {
    description = 'Generate and open Allure report'
    group = 'verification'

    def allureHome = System.getenv("ALLURE_HOME")
    if (allureHome == null) {
        throw new GradleException("ALLURE_HOME is not set")
    }

    def allureExecutable = "${allureHome}\\bin\\allure.bat"
    def resultsDir = "build/allure-results"
    def reportDir = "build/allure-report"

    commandLine allureExecutable, "generate", resultsDir, "--clean", "-o", reportDir

    doLast {
        exec {
            commandLine allureExecutable, "open", reportDir
        }
    }
}

def testTasks = [
        smoke_tests_api          : 'src/test/resources/smoke_tests_api.xml',
        smoke_tests_ui           : 'src/test/resources/smoke_tests_ui.xml',
        regression_tests_api     : 'src/test/resources/regression_tests_api.xml',
        regression_tests_ui      : 'src/test/resources/regression_tests_ui.xml',
        crossBrowser_addContact  : 'src/test/resources/crossBrowser_addContact.xml',
        test_edge_addNewContact  : 'src/test/resources/test_edge.xml'
]

testTasks.each { taskName, suitePath ->
    tasks.register(taskName, Test) {
        useTestNG {
            suites suitePath
        }
        systemProperty 'browser', System.getProperty('browser', 'chrome')
        systemProperty 'device', System.getProperty('device', 'desktop')
        systemProperty 'allure.results.directory', 'build/allure-results'

        dependsOn writeAllureEnvironment
    }

    tasks.register("${taskName}_with_report") {
        dependsOn taskName
        finalizedBy generateAllureReport
    }
}
